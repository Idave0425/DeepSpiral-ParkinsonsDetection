{"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":32755,"status":"ok","timestamp":1708285234911,"user":{"displayName":"Ishan Dave","userId":"13762692394113223498"},"user_tz":480},"id":"b76652cf","outputId":"c3588a9b-1e88-4888-b4ba-5fa1126f5d20"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"id":"b76652cf"},{"cell_type":"code","execution_count":null,"metadata":{"id":"78ae10bb"},"outputs":[],"source":["\n","# Please replace the brackets below with the drive location of your folders which included subfolders for images\n","# Sample path: /content/drive/My Drive/ImageClassification\n","TRAINING_PATH = '/content/drive/Shareddrives/1:1_Ishan_Dave/Train'\n","VALIDATION_PATH = '/content/drive/Shareddrives/1:1_Ishan_Dave/Validation'"],"id":"78ae10bb"},{"cell_type":"code","execution_count":null,"metadata":{"id":"0bcb8666"},"outputs":[],"source":["def create_model(base_model, num_classes):\n","    import tensorflow as tf\n","    # Grab the last layer and add a few extra layers to it\n","    x=base_model.output\n","    x=GlobalAveragePooling2D()(x)\n","    # Dense layer 1\n","    x=tf.keras.layers.Dense(100,activation='relu', kernel_initializer=tf.keras.initializers.VarianceScaling(), use_bias=True)(x)\n","\n","    # Final layer with softmax activation\n","    preds=tf.keras.layers.Dense(num_classes,activation='softmax', kernel_initializer=tf.keras.initializers.VarianceScaling(), use_bias=False)(x)\n","\n","    # Create the final model\n","    model=Model(inputs=base_model.input,outputs=preds)\n","    return model\n"],"id":"0bcb8666"},{"cell_type":"code","execution_count":null,"metadata":{"id":"a7733499"},"outputs":[],"source":["def get_optimizer(optimizer_name, learning_rate):\n","    # Import keras optimizers\n","    from tensorflow.keras.optimizers import Adam, Adadelta, Adagrad, Adamax, Ftrl, Nadam, RMSprop, SGD\n","    print('Selected Optimizer', optimizer_name)\n","    switcher = {\n","        'Adadelta': Adadelta(learning_rate=learning_rate),\n","        'Adagrad': Adagrad(learning_rate=learning_rate),\n","        'Adam': Adam(learning_rate=learning_rate),\n","        'Adamax': Adamax(learning_rate=learning_rate),\n","        'FTRL': Ftrl(learning_rate=learning_rate),\n","        'NAdam': Nadam(learning_rate=learning_rate),\n","        'RMSprop': RMSprop(learning_rate=learning_rate),\n","        'Gradient Descent': SGD(learning_rate=learning_rate)\n","    }\n","    # If optimizer_name is empty, Adam will be return as default optimizer\n","    return switcher.get(optimizer_name, Adam(learning_rate=learning_rate))\n"],"id":"a7733499"},{"cell_type":"code","execution_count":null,"metadata":{"id":"e1978032","colab":{"base_uri":"https://localhost:8080/"},"outputId":"b770f49e-1093-4521-9dde-75850e8e6950","executionInfo":{"status":"ok","timestamp":1708285365720,"user_tz":480,"elapsed":94735,"user":{"displayName":"Ishan Dave","userId":"13762692394113223498"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Found 53 images belonging to 2 classes.\n","Found 13 images belonging to 2 classes.\n","dict_keys(['Healthy', 'Parkinsons'])\n","Downloading data from https://storage.googleapis.com/tensorflow/keras-applications/resnet/resnet50_weights_tf_dim_ordering_tf_kernels_notop.h5\n","94765736/94765736 [==============================] - 0s 0us/step\n","175\n","Selected Optimizer Adam\n","Epoch 1/30\n","2/2 [==============================] - 20s 12s/step - loss: 0.6292 - accuracy: 0.6792 - val_loss: 0.4685 - val_accuracy: 0.8462\n","Epoch 2/30\n","2/2 [==============================] - 2s 732ms/step - loss: 0.5388 - accuracy: 0.7925 - val_loss: 0.4100 - val_accuracy: 0.8462\n","Epoch 3/30\n","2/2 [==============================] - 2s 1s/step - loss: 0.5217 - accuracy: 0.7925 - val_loss: 0.3930 - val_accuracy: 0.8462\n","Epoch 4/30\n","2/2 [==============================] - 2s 1s/step - loss: 0.5146 - accuracy: 0.7925 - val_loss: 0.3776 - val_accuracy: 0.8462\n","Epoch 5/30\n","2/2 [==============================] - 2s 726ms/step - loss: 0.4951 - accuracy: 0.7925 - val_loss: 0.3662 - val_accuracy: 0.8462\n","Epoch 6/30\n","2/2 [==============================] - 1s 730ms/step - loss: 0.4712 - accuracy: 0.7925 - val_loss: 0.3622 - val_accuracy: 0.8462\n","Epoch 7/30\n","2/2 [==============================] - 2s 1s/step - loss: 0.4641 - accuracy: 0.7925 - val_loss: 0.3759 - val_accuracy: 0.8462\n","Epoch 8/30\n","2/2 [==============================] - 2s 1s/step - loss: 0.4496 - accuracy: 0.7925 - val_loss: 0.3878 - val_accuracy: 0.8462\n","Epoch 9/30\n","2/2 [==============================] - 1s 708ms/step - loss: 0.4445 - accuracy: 0.7925 - val_loss: 0.3834 - val_accuracy: 0.8462\n","Epoch 10/30\n","2/2 [==============================] - 1s 733ms/step - loss: 0.4367 - accuracy: 0.7925 - val_loss: 0.3668 - val_accuracy: 0.8462\n","Epoch 11/30\n","2/2 [==============================] - 2s 988ms/step - loss: 0.4274 - accuracy: 0.7925 - val_loss: 0.3437 - val_accuracy: 0.8462\n","Epoch 12/30\n","2/2 [==============================] - 2s 752ms/step - loss: 0.4108 - accuracy: 0.7925 - val_loss: 0.3280 - val_accuracy: 0.8462\n","Epoch 13/30\n","2/2 [==============================] - 2s 990ms/step - loss: 0.4007 - accuracy: 0.7925 - val_loss: 0.3166 - val_accuracy: 0.8462\n","Epoch 14/30\n","2/2 [==============================] - 1s 973ms/step - loss: 0.3939 - accuracy: 0.7925 - val_loss: 0.3106 - val_accuracy: 0.8462\n","Epoch 15/30\n","2/2 [==============================] - 1s 720ms/step - loss: 0.3868 - accuracy: 0.7925 - val_loss: 0.3039 - val_accuracy: 0.8462\n","Epoch 16/30\n","2/2 [==============================] - 2s 1s/step - loss: 0.3806 - accuracy: 0.7925 - val_loss: 0.2965 - val_accuracy: 0.8462\n","Epoch 17/30\n","2/2 [==============================] - 1s 721ms/step - loss: 0.3743 - accuracy: 0.7925 - val_loss: 0.2916 - val_accuracy: 0.8462\n","Epoch 18/30\n","2/2 [==============================] - 2s 986ms/step - loss: 0.3706 - accuracy: 0.7925 - val_loss: 0.2887 - val_accuracy: 0.8462\n","Epoch 19/30\n","2/2 [==============================] - 2s 749ms/step - loss: 0.3614 - accuracy: 0.8113 - val_loss: 0.2832 - val_accuracy: 0.8462\n","Epoch 20/30\n","2/2 [==============================] - 1s 705ms/step - loss: 0.3561 - accuracy: 0.8113 - val_loss: 0.2774 - val_accuracy: 0.8462\n","Epoch 21/30\n","2/2 [==============================] - 1s 697ms/step - loss: 0.3510 - accuracy: 0.8113 - val_loss: 0.2714 - val_accuracy: 0.8462\n","Epoch 22/30\n","2/2 [==============================] - 1s 713ms/step - loss: 0.3457 - accuracy: 0.8113 - val_loss: 0.2652 - val_accuracy: 0.8462\n","Epoch 23/30\n","2/2 [==============================] - 2s 1s/step - loss: 0.3407 - accuracy: 0.8113 - val_loss: 0.2618 - val_accuracy: 0.8462\n","Epoch 24/30\n","2/2 [==============================] - 2s 794ms/step - loss: 0.3359 - accuracy: 0.8113 - val_loss: 0.2574 - val_accuracy: 0.9231\n","Epoch 25/30\n","2/2 [==============================] - 2s 933ms/step - loss: 0.3315 - accuracy: 0.8491 - val_loss: 0.2542 - val_accuracy: 0.9231\n","Epoch 26/30\n","2/2 [==============================] - 2s 1s/step - loss: 0.3266 - accuracy: 0.8491 - val_loss: 0.2500 - val_accuracy: 0.9231\n","Epoch 27/30\n","2/2 [==============================] - 2s 729ms/step - loss: 0.3226 - accuracy: 0.8491 - val_loss: 0.2441 - val_accuracy: 0.9231\n","Epoch 28/30\n","2/2 [==============================] - 2s 773ms/step - loss: 0.3180 - accuracy: 0.8491 - val_loss: 0.2378 - val_accuracy: 0.9231\n","Epoch 29/30\n","2/2 [==============================] - 2s 742ms/step - loss: 0.3138 - accuracy: 0.8491 - val_loss: 0.2325 - val_accuracy: 0.9231\n","Epoch 30/30\n","2/2 [==============================] - 2s 1s/step - loss: 0.3095 - accuracy: 0.8491 - val_loss: 0.2275 - val_accuracy: 0.9231\n"]}],"source":["# Import packages needed to create a image classification model\n","import matplotlib.pyplot as plt\n","import numpy as np\n","import os\n","import tensorflow as tf\n","\n","from keras.applications.resnet50 import preprocess_input\n","from keras.preprocessing.image import ImageDataGenerator\n","from keras.layers import Dense,GlobalAveragePooling2D\n","from keras.models import Model\n","from tensorflow.keras import regularizers\n","\n","from tensorflow.keras.preprocessing import image_dataset_from_directory\n","from keras.callbacks import EarlyStopping\n","from tensorflow import keras\n","\n","# Initialize hyper params\n","epochs = 30 #<-- increase for higher accuracy\n","base_learning_rate = 0.0001 #decrease for different results; use excel sheet to note down results from each change to learning rate and epochs\n","optimizer = 'Adam'\n","BATCH_SIZE = 32\n","\n","IMG_SIZE = (224, 224)\n","\n","# Create the data generation pipeline for training and validation\n","train_datagen = ImageDataGenerator(preprocessing_function=preprocess_input)\n","validation_datagen = ImageDataGenerator(preprocessing_function=preprocess_input)\n","\n","train_generator = train_datagen.flow_from_directory(TRAINING_PATH,\n","                                                target_size=IMG_SIZE,\n","                                                color_mode='rgb',\n","                                                batch_size=BATCH_SIZE,\n","                                                class_mode='categorical',\n","                                                shuffle=True,\n","                                                )\n","validation_generator = validation_datagen.flow_from_directory(VALIDATION_PATH,\n","                                                target_size=IMG_SIZE,\n","                                                color_mode='rgb',\n","                                                batch_size=BATCH_SIZE,\n","                                                class_mode='categorical',\n","                                                shuffle=True,\n","                                                )\n","\n","print(validation_generator.class_indices.keys())\n","# Download the model\n","base_model = tf.keras.applications.ResNet50(input_shape=(224, 224, 3), include_top=False, weights='imagenet')\n","for layer in base_model.layers:\n","    layer.trainable=False\n","\n","# Specify the number of classes\n","num_classes = 2\n","\n","# Create the base model\n","model = create_model(base_model,num_classes)\n","\n","print(len(base_model.layers))\n","\n","model.compile(optimizer = get_optimizer(optimizer_name=optimizer,learning_rate=base_learning_rate),loss='CategoricalCrossentropy',metrics=['accuracy'])\n","# Adam optimizer\n","# loss function will be categorical cross entropy\n","# evaluation metric will be accuracy\n","\n","early_stopping_monitor = EarlyStopping(\n","    monitor='val_loss',\n","    min_delta=0,\n","    patience=30,\n","    verbose=0,\n","    mode='auto',\n","    baseline=None,\n","    restore_best_weights=True\n",")\n","\n","step_size_train = train_generator.n//train_generator.batch_size\n","history_fine = model.fit(train_generator,\n","                        epochs=epochs,\n","                        validation_data = validation_generator,\n","                        verbose=1)"],"id":"e1978032"},{"cell_type":"code","source":["def visualization():\n","    import pandas as pd\n","    df = pd.DataFrame(history_fine.history)\n","    #loss plots\n","    plt.figure(figsize=(8,8))\n","    plt.plot(df['loss'], color='red', label = \"Training_loss\")\n","    plt.plot(df['val_loss'], color='blue')\n","    plt.legend(['Training Loss','Validation loss'],loc = 'best' )\n","    plt.title('Line plot of Training and Validation loss')\n","    plt.ylim(0,1)\n","    plt.show()\n","\n","    #accuracy plots\n","    plt.figure(figsize=(8,8))\n","    plt.plot(df['accuracy'], color='red')\n","    plt.plot(df['val_accuracy'], color='blue')\n","    plt.legend(['Training acc','Validation acc'],loc = 'best' )\n","    plt.title('Line plot of Training and Validation Accuracies')\n","    plt.ylim(0,1)\n","    plt.show()\n","\n","visualization()"],"metadata":{"id":"VIV_LOPybQWa","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1708285391886,"user_tz":480,"elapsed":796,"user":{"displayName":"Ishan Dave","userId":"13762692394113223498"}},"outputId":"98a57465-bea2-45c6-b13f-8b554714a901"},"id":"VIV_LOPybQWa","execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x800 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 800x800 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"8756be45","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708285406798,"user_tz":480,"elapsed":164,"user":{"displayName":"Ishan Dave","userId":"13762692394113223498"}},"outputId":"cb3b7d70-91ba-4aa6-bca1-ca8f9b475fb4"},"outputs":[{"output_type":"stream","name":"stdout","text":["Training Accuracy:  [0.6792452931404114, 0.7924528121948242, 0.7924528121948242, 0.7924528121948242, 0.7924528121948242, 0.7924528121948242, 0.7924528121948242, 0.7924528121948242, 0.7924528121948242, 0.7924528121948242, 0.7924528121948242, 0.7924528121948242, 0.7924528121948242, 0.7924528121948242, 0.7924528121948242, 0.7924528121948242, 0.7924528121948242, 0.7924528121948242, 0.8113207817077637, 0.8113207817077637, 0.8113207817077637, 0.8113207817077637, 0.8113207817077637, 0.8113207817077637, 0.849056601524353, 0.849056601524353, 0.849056601524353, 0.849056601524353, 0.849056601524353, 0.849056601524353]\n","Validation Accuracy:  [0.8461538553237915, 0.8461538553237915, 0.8461538553237915, 0.8461538553237915, 0.8461538553237915, 0.8461538553237915, 0.8461538553237915, 0.8461538553237915, 0.8461538553237915, 0.8461538553237915, 0.8461538553237915, 0.8461538553237915, 0.8461538553237915, 0.8461538553237915, 0.8461538553237915, 0.8461538553237915, 0.8461538553237915, 0.8461538553237915, 0.8461538553237915, 0.8461538553237915, 0.8461538553237915, 0.8461538553237915, 0.8461538553237915, 0.9230769276618958, 0.9230769276618958, 0.9230769276618958, 0.9230769276618958, 0.9230769276618958, 0.9230769276618958, 0.9230769276618958]\n","Training Loss:  [0.6291566491127014, 0.5387998223304749, 0.5217175483703613, 0.5146498680114746, 0.4950636625289917, 0.471164345741272, 0.46405044198036194, 0.44955354928970337, 0.4444926977157593, 0.4367459714412689, 0.4273666739463806, 0.4108332395553589, 0.40065643191337585, 0.39389076828956604, 0.38678547739982605, 0.38064661622047424, 0.37430793046951294, 0.3705783486366272, 0.36143529415130615, 0.3560548424720764, 0.35096752643585205, 0.3457041084766388, 0.3407072126865387, 0.3359171450138092, 0.33150917291641235, 0.32664525508880615, 0.3225947618484497, 0.3180493116378784, 0.31379836797714233, 0.3094671666622162]\n","Validation Loss:  [0.4685016870498657, 0.4100295603275299, 0.3930091857910156, 0.3776295781135559, 0.36617326736450195, 0.36223286390304565, 0.37585365772247314, 0.3877919316291809, 0.38335180282592773, 0.3667595088481903, 0.3437218964099884, 0.32799798250198364, 0.31657469272613525, 0.31059515476226807, 0.30393725633621216, 0.296485960483551, 0.29164692759513855, 0.28869569301605225, 0.2831897735595703, 0.27735036611557007, 0.2714174687862396, 0.2652190923690796, 0.2617804706096649, 0.2574353814125061, 0.2541966140270233, 0.24995103478431702, 0.2440941482782364, 0.2377920299768448, 0.23251380026340485, 0.22752083837985992]\n","best model accuracy:  0.9230769276618958\n"]}],"source":["\n","# Import numpy for calculating best model accuracy\n","import numpy as np\n","# Populating matrics -> accuracy & loss\n","acc = history_fine.history['accuracy']\n","val_acc = history_fine.history['val_accuracy']\n","\n","loss = history_fine.history['loss']\n","val_loss = history_fine.history['val_loss']\n","\n","print('Training Accuracy: ', acc)\n","print('Validation Accuracy: ', val_acc)\n","print('Training Loss: ', loss)\n","print('Validation Loss: ', val_loss)\n","best_model_accuracy = history_fine.history['val_accuracy'][np.argmin(history_fine.history['val_loss'])]\n","print('best model accuracy: ', best_model_accuracy)\n"],"id":"8756be45"},{"cell_type":"code","execution_count":null,"metadata":{"id":"4c863fdc"},"outputs":[],"source":["def seperate_labels(generator):\n","    x_validation = []\n","    y_validation = []\n","    num_seen = 0\n","\n","    for x, labels in generator:\n","        x_validation.append(x)\n","        y_validation.append([argmax(label) for label in labels])\n","        num_seen += len(x)\n","        if num_seen == generator.n: break\n","\n","    x_validation = np.concatenate(x_validation)\n","    y_validation = np.concatenate(y_validation)\n","    return x_validation, y_validation\n"],"id":"4c863fdc"},{"cell_type":"code","execution_count":null,"metadata":{"id":"a650757c","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708285435418,"user_tz":480,"elapsed":552,"user":{"displayName":"Ishan Dave","userId":"13762692394113223498"}},"outputId":"ed44d864-489c-49ca-fbab-68818ce68e9c"},"outputs":[{"output_type":"stream","name":"stdout","text":["1/1 [==============================] - 0s 30ms/step\n"]}],"source":["\n","# Calculate and display the confusion matrix\n","import matplotlib.pyplot as plt\n","from numpy.core.fromnumeric import argmax\n","from sklearn.metrics import ConfusionMatrixDisplay\n","\n","x_validation, y_validation = seperate_labels(validation_generator)\n","y_pred = model.predict(x_validation, batch_size=BATCH_SIZE)\n","predictions = np.apply_along_axis(argmax, 1, y_pred)\n","display_labels = validation_generator.class_indices.keys()\n","\n","# ConfusionMatrixDisplay.from_predictions(y_validation, predictions, display_labels=display_labels, cmap=\"binary\")\n","# plt.show()\n"],"id":"a650757c"},{"cell_type":"code","source":["import seaborn as sns\n","from sklearn.metrics import confusion_matrix, classification_report\n","plt.figure(figsize = (10,10))\n","sns.heatmap(confusion_matrix(y_validation, predictions), annot = True, fmt = 'g', cmap = \"Blues\",xticklabels=display_labels, yticklabels=display_labels)\n","plt.title(\"Confusion Matrix\")\n","plt.show()"],"metadata":{"id":"0hlIInn6bhOE","colab":{"base_uri":"https://localhost:8080/","height":853},"executionInfo":{"status":"ok","timestamp":1708285440359,"user_tz":480,"elapsed":651,"user":{"displayName":"Ishan Dave","userId":"13762692394113223498"}},"outputId":"0c4b5376-42e3-403f-c8c3-c02daa906706"},"id":"0hlIInn6bhOE","execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x1000 with 2 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAwAAAANECAYAAAAHSEj0AAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAABD6klEQVR4nO3dd5RU9fk/8GcW2aVIE6UZAQEbCCpiEgtiQQmi0Rh7A5RYAlGDimKiFDVYEY1REwugwRprYmIF5WsNgmCLioglNgyKSHFBmN8fHvaXDUXuMMvu9b5eOXMOe+fOvc/cnDPue5/nfiaXz+fzAQAAZEJJdRcAAACsPwIAAABkiAAAAAAZIgAAAECGCAAAAJAhAgAAAGSIAAAAABkiAAAAQIYIAAAAkCECAPC9MXPmzNh3332jUaNGkcvl4v777y/q8d99993I5XIxbty4oh43zfbYY4/YY489qrsMABIQAICimjVrVpx00knRrl27qFOnTjRs2DB23XXXuOqqq2Lx4sVVeu6+ffvGK6+8EhdddFHceuut0a1btyo93/rUr1+/yOVy0bBhw1Vex5kzZ0Yul4tcLheXX3554uN/9NFHMXz48Jg+fXoRqgWgJtugugsAvj8eeuihOPTQQ6OsrCyOO+642HbbbWPJkiXx9NNPx1lnnRWvvfZa/OlPf6qScy9evDiee+65+M1vfhODBg2qknO0adMmFi9eHLVr166S43+XDTbYIBYtWhR//etf47DDDqv03IQJE6JOnTrx9ddfF3Tsjz76KEaMGBFt27aN7bfffq1f9+ijjxZ0PgCqjwAAFMXs2bPjiCOOiDZt2sTEiROjZcuWFc8NHDgw3n777XjooYeq7PyfffZZREQ0bty4ys6Ry+WiTp06VXb871JWVha77rpr3H777SsFgNtuuy369OkT99xzz3qpZdGiRVGvXr0oLS1dL+cDoHiMAAFFcemll8aCBQvipptuqvTL/wodOnSI0047reLnb775Ji644IJo3759lJWVRdu2bePcc8+N8vLySq9r27Zt7L///vH000/HD3/4w6hTp060a9cubrnllop9hg8fHm3atImIiLPOOityuVy0bds2Ir4dnVnx7/82fPjwyOVylbY99thjsdtuu0Xjxo1jww03jK222irOPffciudXdw/AxIkTo3v37lG/fv1o3LhxHHjggfGvf/1rled7++23o1+/ftG4ceNo1KhR9O/fPxYtWrT6C/s/jjrqqPjHP/4R8+bNq9g2ZcqUmDlzZhx11FEr7f/555/HmWeeGZ07d44NN9wwGjZsGL17944ZM2ZU7PPkk0/GTjvtFBER/fv3rxglWvE+99hjj9h2221j6tSpsfvuu0e9evUqrsv/3gPQt2/fqFOnzkrvv1evXtGkSZP46KOP1vq9AlA1BACgKP76179Gu3btYpdddlmr/QcMGBDnn39+dO3aNa688sro0aNHjBo1Ko444oiV9n377bfjkEMOiX322SeuuOKKaNKkSfTr1y9ee+21iIg4+OCD48orr4yIiCOPPDJuvfXWGDNmTKL6X3vttdh///2jvLw8Ro4cGVdccUX89Kc/jWeeeWaNr3v88cejV69eMWfOnBg+fHgMHjw4nn322dh1113j3XffXWn/ww47LL766qsYNWpUHHbYYTFu3LgYMWLEWtd58MEHRy6Xi3vvvbdi22233RZbb711dO3adaX933nnnbj//vtj//33j9GjR8dZZ50Vr7zySvTo0aPil/FtttkmRo4cGRERJ554Ytx6661x6623xu67715xnLlz50bv3r1j++23jzFjxsSee+65yvquuuqq2GSTTaJv376xbNmyiIj44x//GI8++mj8/ve/j1atWq31ewWgiuQB1tGXX36Zj4j8gQceuFb7T58+PR8R+QEDBlTafuaZZ+YjIj9x4sSKbW3atMlHRH7y5MkV2+bMmZMvKyvLn3HGGRXbZs+enY+I/GWXXVbpmH379s23adNmpRqGDRuW/++PwCuvvDIfEfnPPvtstXWvOMfYsWMrtm2//fb5Zs2a5efOnVuxbcaMGfmSkpL8cccdt9L5jj/++ErH/NnPfpZv2rTpas/53++jfv36+Xw+nz/kkEPye++9dz6fz+eXLVuWb9GiRX7EiBGrvAZff/11ftmyZSu9j7KysvzIkSMrtk2ZMmWl97ZCjx498hGRv/7661f5XI8ePSpte+SRR/IRkb/wwgvz77zzTn7DDTfMH3TQQd/5HgFYP3QAgHU2f/78iIho0KDBWu3/97//PSIiBg8eXGn7GWecERGx0r0CHTt2jO7du1f8vMkmm8RWW20V77zzTsE1/68V9w488MADsXz58rV6zccffxzTp0+Pfv36xUYbbVSxvUuXLrHPPvtUvM//dvLJJ1f6uXv37jF37tyKa7g2jjrqqHjyySfjk08+iYkTJ8Ynn3yyyvGfiG/vGygp+fajftmyZTF37tyK8aZp06at9TnLysqif//+a7XvvvvuGyeddFKMHDkyDj744KhTp0788Y9/XOtzAVC1BABgnTVs2DAiIr766qu12v+9996LkpKS6NChQ6XtLVq0iMaNG8d7771XaXvr1q1XOkaTJk3iiy++KLDilR1++OGx6667xoABA6J58+ZxxBFHxF133bXGMLCizq222mql57bZZpv4z3/+EwsXLqy0/X/fS5MmTSIiEr2X/fbbLxo0aBB33nlnTJgwIXbaaaeVruUKy5cvjyuvvDK22GKLKCsri4033jg22WSTePnll+PLL79c63NuuummiW74vfzyy2OjjTaK6dOnx9VXXx3NmjVb69cCULUEAGCdNWzYMFq1ahWvvvpqotf97024q1OrVq1Vbs/n8wWfY8V8+gp169aNyZMnx+OPPx7HHntsvPzyy3H44YfHPvvss9K+62Jd3ssKZWVlcfDBB8f48ePjvvvuW+1f/yMifve738XgwYNj9913jz//+c/xyCOPxGOPPRadOnVa605HxLfXJ4mXXnop5syZExERr7zySqLXAlC1BACgKPbff/+YNWtWPPfcc9+5b5s2bWL58uUxc+bMSts//fTTmDdvXsWKPsXQpEmTSivmrPC/XYaIiJKSkth7771j9OjR8frrr8dFF10UEydOjEmTJq3y2CvqfPPNN1d67o033oiNN9446tevv25vYDWOOuqoeOmll+Krr75a5Y3TK/zlL3+JPffcM2666aY44ogjYt99942ePXuudE3WNoytjYULF0b//v2jY8eOceKJJ8all14aU6ZMKdrxAVg3AgBQFEOGDIn69evHgAED4tNPP13p+VmzZsVVV10VEd+OsETESiv1jB49OiIi+vTpU7S62rdvH19++WW8/PLLFds+/vjjuO+++yrt9/nnn6/02hVfiPW/S5Ou0LJly9h+++1j/PjxlX6hfvXVV+PRRx+teJ9VYc8994wLLrggrrnmmmjRosVq96tVq9ZK3YW77747Pvzww0rbVgSVVYWlpM4+++x4//33Y/z48TF69Oho27Zt9O3bd7XXEYD1yxeBAUXRvn37uO222+Lwww+PbbbZptI3AT/77LNx9913R79+/SIiYrvttou+ffvGn/70p5g3b1706NEj/vnPf8b48ePjoIMOWu0Sk4U44ogj4uyzz46f/exnceqpp8aiRYviuuuuiy233LLSTbAjR46MyZMnR58+faJNmzYxZ86cuPbaa+MHP/hB7Lbbbqs9/mWXXRa9e/eOnXfeOU444YRYvHhx/P73v49GjRrF8OHDi/Y+/ldJSUn89re//c799t9//xg5cmT0798/dtlll3jllVdiwoQJ0a5du0r7tW/fPho3bhzXX399NGjQIOrXrx8/+tGPYvPNN09U18SJE+Paa6+NYcOGVSxLOnbs2Nhjjz3ivPPOi0svvTTR8QAoPh0AoGh++tOfxssvvxyHHHJIPPDAAzFw4MA455xz4t13340rrrgirr766op9b7zxxhgxYkRMmTIlTj/99Jg4cWIMHTo07rjjjqLW1LRp07jvvvuiXr16MWTIkBg/fnyMGjUqDjjggJVqb926ddx8880xcODA+MMf/hC77757TJw4MRo1arTa4/fs2TMefvjhaNq0aZx//vlx+eWXx49//ON45plnEv/yXBXOPffcOOOMM+KRRx6J0047LaZNmxYPPfRQbLbZZpX2q127dowfPz5q1aoVJ598chx55JHx1FNPJTrXV199Fccff3zssMMO8Zvf/KZie/fu3eO0006LK664Ip5//vmivC8ACpfLJ7nzDAAASDUdAAAAyBABAAAAMkQAAACADBEAAAAgQwQAAADIEAEAAAAyRAAAAIAMqTHfBPzRvCXVXQIAAGvQqnFpdZewSnV3GFTdJazW4peuqe4SVqIDAAAAGSIAAABAhtSYESAAAChIzt+0k3C1AAAgQwQAAADIECNAAACkWy5X3RWkig4AAABkiAAAAAAZYgQIAIB0swpQIq4WAABkiAAAAAAZYgQIAIB0swpQIjoAAACQIQIAAABkiBEgAADSzSpAibhaAACQIQIAAABkiBEgAADSzSpAiegAAABAhggAAACQIUaAAABIN6sAJeJqAQBAhggAAACQIUaAAABIN6sAJaIDAAAAGSIAAABAhhgBAgAg3awClIirBQAAGSIAAABAhhgBAgAg3awClIgOAAAAZIgAAAAAGWIECACAdLMKUCKuFgAAZIgAAAAAGWIECACAdLMKUCI6AAAAkCECAAAAZIgRIAAA0s0qQIm4WgAAkCECAAAAZIgRIAAA0s0IUCKuFgAAZIgAAAAAGWIECACAdCvxRWBJ6AAAAECGCAAAAJAhRoAAAEg3qwAl4moBAECGCAAAAJAhRoAAAEi3nFWAktABAACADBEAAAAgQ4wAAQCQblYBSsTVAgCADBEAAAAgQ4wAAQCQblYBSkQHAAAAMkQAAACADDECBABAulkFKBFXCwAAMkQAAACADDECBABAulkFKBEdAAAAyBABAAAAMkQAAAAg3XIlNfeRwOTJk+OAAw6IVq1aRS6Xi/vvv7/S8/l8Ps4///xo2bJl1K1bN3r27BkzZ85MfLkEAAAAqAEWLlwY2223XfzhD39Y5fOXXnppXH311XH99dfHCy+8EPXr149evXrF119/neg8bgIGAIAaoHfv3tG7d+9VPpfP52PMmDHx29/+Ng488MCIiLjllluiefPmcf/998cRRxyx1ufRAQAAIN1yuRr7KC8vj/nz51d6lJeXJ36Ls2fPjk8++SR69uxZsa1Ro0bxox/9KJ577rlExxIAAACgiowaNSoaNWpU6TFq1KjEx/nkk08iIqJ58+aVtjdv3rziubVlBAgAAKrI0KFDY/DgwZW2lZWVVVM13xIAAABIt4Sr7axPZWVlRfmFv0WLFhER8emnn0bLli0rtn/66aex/fbbJzpWzb1aAABARERsvvnm0aJFi3jiiScqts2fPz9eeOGF2HnnnRMdSwcAAABqgAULFsTbb79d8fPs2bNj+vTpsdFGG0Xr1q3j9NNPjwsvvDC22GKL2HzzzeO8886LVq1axUEHHZToPAIAAADplstVdwVF8eKLL8aee+5Z8fOKewf69u0b48aNiyFDhsTChQvjxBNPjHnz5sVuu+0WDz/8cNSpUyfReXL5fD5f1MoL9NG8JdVdAgAAa9CqcWl1l7BKdftcXd0lrNbih06t7hJW4h4AAADIECNAAACkWw1eBagmcrUAACBDBAAAAMgQI0AAAKSbEaBEXC0AAMgQAQAAADLECBAAAOn2PfkisPVFBwAAADJEAAAAgAwRAAAAIEPcAwAAQLpZBjQRVwsAADJEAAAAgAwxAgQAQLpZBjQRHQAAAMgQAQAAADLECBAAAOlmFaBEXC0AAMgQAQAAADLECBAAAOlmFaBEdAAAACBDBAAAAMgQI0AAAKRazghQIjoAAACQIQIAAABkiBEgAABSzQhQMjoAAACQIQIAAABkiBEgAADSzQRQIjoAAACQIQIAAABkiBEgAABSzSpAyegAAABAhggAAACQIUaAAABINSNAyegAAABAhggAAACQIUaAAABINSNAyegAAABAhggAAACQIUaAAABINSNAyegAAABAhggAAACQIUaAAABINxNAiegAAABAhggAAACQIUaAAABINasAJaMDAAAAGSIAAABAhhgBAgAg1YwAJaMDAAAAGSIAAABAhhgBAgAg1YwAJaMDAAAAGSIAAABAhhgBAgAg1YwAJaMDAAAAGSIAAABAhhgBAgAg3UwAJaIDAAAAGSIAAABAhhgBAgAg1awClIwOAAAAZIgAAAAAGWIECACAVDMClIwOAAAAZIgAAAAAGWIECACAVDMClIwOAAAAZIgAAAAAGWIECACAdDMBlIgOAAAAZIgAAAAAGWIECACAVLMKUDI6AAAAkCECAAAAZIgRIAAAUs0IUDI6AAAAkCECAAAAZIgRIAAAUs0IUDI6AAAAkCECAAAAZIgRIAAAUs0IUDI6AAAAkCECAAAAZIgRIAAA0s0EUCI6AAAAkCECAAAAZIgRIAAAUs0qQMnoAAAAQIYIAAAAkCEFBYBJkyYVuw4AAChILpersY+aqKAA8JOf/CTat28fF154YXzwwQfFrgkAAKgiBQWADz/8MAYNGhR/+ctfol27dtGrV6+46667YsmSJcWuDwAAKKKCAsDGG28cv/71r2P69OnxwgsvxJZbbhm//OUvo1WrVnHqqafGjBkzil0nAACsUnWP+WRiBOi/de3aNYYOHRqDBg2KBQsWxM033xw77rhjdO/ePV577bVi1AgAABRJwQFg6dKl8Ze//CX222+/aNOmTTzyyCNxzTXXxKeffhpvv/12tGnTJg499NBi1goAAKyjgr4I7Fe/+lXcfvvtkc/n49hjj41LL700tt1224rn69evH5dffnm0atWqaIUCAMAq1cxJmxqroADw+uuvx+9///s4+OCDo6ysbJX7bLzxxpYLBQCAGqagAPDEE09894E32CB69OhRyOEBAIAqUlAAiIiYOXNmTJo0KebMmRPLly+v9Nz555+/zoUBAMDaqKmr7dRUBQWAG264IU455ZTYeOONo0WLFpUuei6XEwAAAKCGKigAXHjhhXHRRRfF2WefXex6AACAKlRQAPjiiy8s8QkAQI1gBCiZgr4H4NBDD41HH3202LUAAABVbK07AFdffXXFvzt06BDnnXdePP/889G5c+eoXbt2pX1PPfXU4lUIAAAUTS6fz+fXZsfNN9987Q6Yy8U777yTuJCP5i1J/BoAANafVo1Lq7uEVWp72t+qu4TVeveq/au7hJWsdQdg9uzZVVkHAACwHhR0D8DIkSNj0aJFK21fvHhxjBw5cp2LAgAAqkZBAWDEiBGxYMGClbYvWrQoRowYsc5FQbHNeOnFOPeMQXFIn71izx91jqef+u5vswaoyXyuwf+Xy+Vq7KMmKigA5PP5Vb6hGTNmxEYbbbTORUGxfb14cbTfYss47azfVHcpAEXhcw0oVKLvAWjSpElFmtlyyy0rhYBly5bFggUL4uSTTy56kbCufrRL9/jRLt2ruwyAovG5BhQqUQAYM2ZM5PP5OP7442PEiBHRqFGjiudKS0ujbdu2sfPOOxe9SAAAWK2aOWlTYyUKAH379o2Ib5cE3WWXXVZa/x8AAKjZ1joAzJ8/v+LfO+ywQyxevDgWL168yn0bNmy4xmOVl5dHeXn5/2zLRVlZ2dqWAwAAFGCtA0Djxo2/807mFTcHL1u2bI37jRo1aqXVggaf/ds445zz1rYcAACIiKixq+3UVGsdACZNmlS0kw4dOjQGDx5cadvcxf6PAwCAqrbWAaBHjx5FO2lZWdlK4z4Lli8p2vHhfy1etCg+/Pf7FT9//NGH8fZbb0SDho2ieYuW1VgZQGF8rgGFyuXz+XyhL160aFG8//77sWRJ5V/eu3TpkvhYH80TAKg606dOiV//8viVtvfq89M45/yLqqEigHXjc43q0KpxaXWXsErtz/hHdZewWrOu6F3dJaykoADw2WefRf/+/eMf/1j1xf6uewBWRQAAAKjZBIDkamIAKOibgE8//fSYN29evPDCC1G3bt14+OGHY/z48bHFFlvEgw8+WOwaAQCAIkn0PQArTJw4MR544IHo1q1blJSURJs2bWKfffaJhg0bxqhRo6JPnz7FrhMAAFbJIkDJFNQBWLhwYTRr1iwiIpo0aRKfffZZRER07tw5pk2bVrzqAACAoiooAGy11Vbx5ptvRkTEdtttF3/84x/jww8/jOuvvz5atrTyAAAA1FQFjQCddtpp8fHHH0dExLBhw+InP/lJTJgwIUpLS2PcuHHFrA8AANbIF4ElU1AAOOaYYyr+veOOO8Z7770Xb7zxRrRu3To23njjohUHAAAUV0EjQCssWbIk3nzzzSgtLY2uXbv65R8AAGq4ggLAokWL4oQTToh69epFp06d4v33v/0mwl/96ldx8cUXF7VAAABYk1yu5j5qooICwNChQ2PGjBnx5JNPRp06dSq29+zZM+68886iFQcAAFmxbNmyOO+882LzzTePunXrRvv27eOCCy6IAr63d40Kugfg/vvvjzvvvDN+/OMfV7rpolOnTjFr1qyiFQcAAFlxySWXxHXXXRfjx4+PTp06xYsvvhj9+/ePRo0axamnnlq08xQUAD777LOK7wH4bwsXLnQXNgAA69X35ffPZ599Ng488MCKL9Vt27Zt3H777fHPf/6zqOcpaASoW7du8dBDD1X8vOKi33jjjbHzzjsXpzIAAEi58vLymD9/fqVHeXn5KvfdZZdd4oknnoi33norIiJmzJgRTz/9dPTu3buoNRXUAfjd734XvXv3jtdffz2++eabuOqqq+L111+PZ599Np566qmiFggAAGk1atSoGDFiRKVtw4YNi+HDh6+07znnnBPz58+PrbfeOmrVqhXLli2Liy66KI4++uii1lRQB2C33XaL6dOnxzfffBOdO3eORx99NJo1axbPPfdc7LjjjkUtEAAA1qS6V/pZ02Po0KHx5ZdfVnoMHTp0le/jrrvuigkTJsRtt90W06ZNi/Hjx8fll18e48ePL+71yie4rXj+/PlrtV/Dhg0TF/LRvCWJXwMAwPrTqnFpdZewSluf80h1l7Bab1zca6333WyzzeKcc86JgQMHVmy78MIL489//nO88cYbRasp0QhQ48aN13iTRT6fj1wuF8uWLVvnwgAAIEsWLVoUJSWVB3Rq1aoVy5cvL+p5EgWASZMmVfw7n8/HfvvtFzfeeGNsuummRS0KAADWVknJ92MVoAMOOCAuuuiiaN26dXTq1CleeumlGD16dBx//PFFPU+iEaD/1aBBg5gxY0a0a9dunQsxAgQAULPV1BGgjuc+Wt0lrNbrv9t3rff96quv4rzzzov77rsv5syZE61atYojjzwyzj///CgtLd61L2gVIAAAoLgaNGgQY8aMiTFjxlTpeQQAAABS7XvyPWDrTUHLgP6378s3rwEAQBYk6gAcfPDBlX7++uuv4+STT4769etX2n7vvfeue2UAAEDRJQoAjRo1qvTzMcccU9Ri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gBIpaASoYcOG8f7776+0/YMPPogGDRqsc1EAAEDVKCgAHH744XHCCSfEnXfeGR988EF88MEHcccdd8SAAQPiyCOPLHaNAABAkRQ0AnT55ZdHLpeL4447Lr755puIiKhdu3accsopcfHFFxe1QAAAWBOrACWTy+fz+UJfvGjRopg1a1ZERLRv3z7q1atXcCFff1PwSwFqpCY7DaruEgCKavFL11R3Cav0f299Ud0lrFb3LZtUdwkrKWgEaIV69epF586do02bNvHoo49WfCcAAABQMxUUAA477LC45ppvE+DixYujW7ducdhhh0WXLl3innvuKWqBAACwJrlczX3URAUFgMmTJ0f37t0jIuK+++6LfD4f8+bNi6uvvjouvPDCohYIAAAUT0EB4Msvv4yNNtooIiIefvjh+PnPfx716tWLPn36xMyZM4taIAAAUDwFBYDNNtssnnvuuVi4cGE8/PDDse+++0ZExBdffBF16tQpaoFQLHfcNiF677NX7LRD5zj6iEPjlZdfru6SANbKrl3bx1/GnBTvPHpRLH7pmjhgjy6Vnj9wr+3ir9cOjH9PuiQWv3RNdNly02qqFKpHrgY/aqKCAsDpp58eRx99dPzgBz+IVq1axR577BER344Gde7cuZj1QVE8/I+/x+WXjoqTfjkw7rj7vthqq63jlJNOiLlz51Z3aQDfqX7dsnjlrQ/j9FF3rvL5enVL49nps+K3V9+/fgsDUqmg7wH45S9/GT/84Q/jgw8+iH322SdKSr7NEe3atXMPADXSrePHxsGHHBYH/eznERHx22EjYvLkJ+P+e++JE35xYjVXB7Bmjz7zejz6zOurff72h6ZERETrlhutr5KAFCsoAEREdOvWLbp161ZpW58+fda5ICi2pUuWxL9efy1O+MVJFdtKSkrixz/eJV6e8VI1VgYAFENJTV1up4YqKAAsW7Ysxo0bF0888UTMmTMnli9fXun5iRMnFqU4KIYv5n0Ry5Yti6ZNm1ba3rRp05g9+51qqgoAoHoUFABOO+20GDduXPTp0ye23XbbyCVMXeXl5VFeXl5pW75WWZSVlRVSDgAAsJYKCgB33HFH3HXXXbHffvsVdNJRo0bFiBEjKm37zXnD4rfnDy/oeLAmTRo3iVq1aq10w+/cuXNj4403rqaqAIBiMQCUTEGrAJWWlkaHDh0KPunQoUPjyy+/rPQ46+yhBR8P1qR2aWls07FTvPD8cxXbli9fHi+88Fx02W6HaqwMAGD9K6gDcMYZZ8RVV10V11xzTeLxn4iIsrKVx32+/qaQSmDtHNu3f5x37tnRqdO2sW3nLvHnW8fH4sWL46CfHVzdpQF8p/p1S6P9ZptU/Nx206bRZctN44v5i+KDT76IJg3rxWYtmkTLZo0iImLLts0jIuLTufPj07lfVUvNQM1VUAB4+umnY9KkSfGPf/wjOnXqFLVr1670/L333luU4qBYftJ7v/ji88/j2muujv/857PYautt4to/3hhNjQABKdC1Y5t49MbTKn6+9MxvlzS+9cHn48Rhf44+PTrHDSOPrXj+1kuOj4iIC6//e1z0x7+v32KhOpgBSiSXz+fzSV/Uv3//NT4/duzYxIXoAADfN012GlTdJQAU1eKXrqnuElbp+VnzqruE1fpx+8bVXcJKCuoAFPILPgAAUP0K/iIwAACoCXJmgBJZ6wDQtWvXeOKJJ6JJkyaxww47rPHm32nTphWlOAAAoLjWOgAceOCBFSv3HHjggQWt/gMAAFSvgm4CXpN8Pl9QOHATMPB94yZg4Pumpt4E/M93vqzuElbrh+0aVXcJKynoi8Auu+yyVW5ftmxZHHXUUetUEAAAUHUKDgA33XRTpW3Lli2LI444IqZPn16MugAAgCpQ0CpADz30UOy7777RqFGjOOSQQ+Kbb76Jww47LN54442YNGlSsWsEAIDVcmdqMgUFgJ122inuueeeOOigg6K0tDRuuummePvtt2PSpEnRvHnzYtcIAAAUSUEjQBERe+21V9xyyy3x85//PGbPnh1PPfWUX/4BAKCGW+sOwMEHH7zK7Ztsskk0btw4TjzxxIpt995777pXBgAAa8MMUCJrHQAaNVr1Eka9evUqWjEAAEDVWusAMHbs2Ij4dp3/Dz74IDbZZJOoW7dulRUGAAAUX+J7APL5fHTo0CH+/e9/V0U9AACQSK4G/68mShwASkpKYosttoi5c+dWRT0AAEAVKmgVoIsvvjjOOuusePXVV4tdDwAAUIUK+h6A4447LhYtWhTbbbddlJaWrnQvwOeff16U4gAA4LvkauakTY1VUAAYM2ZMkcsAAADWh4ICQN++fYtdBwAAsB4UFAD+29dffx1LliyptK1hw4brelgAAFgrJoCSKegm4IULF8agQYOiWbNmUb9+/WjSpEmlBwAAUDMVFACGDBkSEydOjOuuuy7KysrixhtvjBEjRkSrVq3illtuKXaNAABAkRQ0AvTXv/41brnllthjjz2if//+0b179+jQoUO0adMmJkyYEEcffXSx6wQAgFUzA5RIQR2Azz//PNq1axcR3877r1j2c7fddovJkycXrzoAAKCoCgoA7dq1i9mzZ0dExNZbbx133XVXRHzbGWjcuHHRigMAAIqroBGg/v37x4wZM6JHjx5xzjnnxAEHHBDXXHNNLF26NEaPHl3sGgEAYLVyZoASSRQAli9fHpdddlk8+OCDsWTJkvjoo49i2LBh8cYbb8TUqVOjQ4cO0aVLl6qqFQAAWEeJAsBFF10Uw4cPj549e0bdunXjqquuijlz5sTNN98cbdq0qaoaAQCAIkl0D8Att9wS1157bTzyyCNx//33x1//+teYMGFCLF++vKrqAwCANcrlau6jJkoUAN5///3Yb7/9Kn7u2bNn5HK5+Oijj4peGAAAUHyJAsA333wTderUqbStdu3asXTp0qIWBQAAVI1E9wDk8/no169flJWVVWz7+uuv4+STT4769etXbLv33nuLVyEAAKxBDZ20qbESBYC+ffuutO2YY44pWjEAAEDVShQAxo4dW1V1AAAA60FBXwQGAAA1hhmgRBLdBAwAAKSbAAAAABliBAgAgFTLmQFKRAcAAAAyRAAAAIAMMQIEAECq5UwAJaIDAAAAGSIAAABAhggAAACkWq4GP5IYNWpU7LTTTtGgQYNo1qxZHHTQQfHmm28mPMp3EwAAAKAGeOqpp2LgwIHx/PPPx2OPPRZLly6NfffdNxYuXFjU87gJGAAAaoCHH3640s/jxo2LZs2axdSpU2P33Xcv2nkEAAAA0q0GrwJUXl4e5eXllbaVlZVFWVnZd772yy+/jIiIjTbaqKg1GQECAIAqMmrUqGjUqFGlx6hRo77zdcuXL4/TTz89dt1119h2222LWpMOAAAAVJGhQ4fG4MGDK21bm7/+Dxw4MF599dV4+umni16TAAAAQKrlavAM0NqO+/y3QYMGxd/+9reYPHly/OAHPyh6TQIAAADUAPl8Pn71q1/FfffdF08++WRsvvnmVXIeAQAAAGqAgQMHxm233RYPPPBANGjQID755JOIiGjUqFHUrVu3aOcRAAAASLVczZ0ASuS6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XccHH3wwOnbsGGVlZfH++++vdPwpU6bEJptsEpdccklErDwCtKJrevnll0fLli2jadOmMXDgwFi6dGnFPtdee21sscUWUadOnWjevHkccsghFc+Vl5fHqaeeGs2aNYs6derEbrvtFlOmTKl4fkX39Yknnohu3bpFvXr1Ypdddok333yzYp8ZM2bEnnvuGQ0aNIiGDRvGjjvuGC+++GJRri9QdQQAUmXWrFnxk5/8JH7+85/Hyy+/HHfeeWc8/fTTlX4RX7p0aVxwwQUxY8aMuP/+++Pdd9+Nfv36rfJ4u+yyS4wZMyYaNmwYH3/8cXz88cdx5plnVjx/xRVXRLdu3eKll16KX/7yl3HKKadU/MdvwIABcdttt0V5eXnF/n/+859j0003jb322qtqLgBQY9WtWzeWLFkSJSUlcfXVV8drr70W48ePj4kTJ8aQIUMq7bto0aK45JJL4sYbb4zXXnstmjVrVun5iRMnxj777BMXXXRRnH322as956RJk2LWrFkxadKkGD9+fIwbNy7GjRsXEREvvvhinHrqqTFy5Mh488034+GHH47dd9+94rVDhgyJe+65J8aPHx/Tpk2LDh06RK9eveLzzz+vdI7f/OY3ccUVV8SLL74YG2ywQRx//PEVzx199NHxgx/8IKZMmRJTp06Nc845J2rXrl3oJQTWlzzUEH379s3XqlUrX79+/UqPOnXq5CMi/8UXX+RPOOGE/Iknnljpdf/3f/+XLykpyS9evHiVx50yZUo+IvJfffVVPp/P5ydNmlRxvHw+nx87dmy+UaNGK72uTZs2+WOOOabi5+XLl+ebNWuWv+666/L5fD6/ePHifJMmTfJ33nlnxT5dunTJDx8+fF0uA5ACffv2zR944IH5fP7bz4bHHnssX1ZWlj/zzDNX2vfuu+/ON23atOLnsWPH5iMiP3369FUe8957781vuOGG+TvuuKPS88OGDctvt912lfZv06ZN/ptvvqnYduihh+YPP/zwfD6fz99zzz35hg0b5ufPn79STQsWLMjXrl07P2HChIptS5Ysybdq1Sp/6aWX5vP5//9Z+fjjj1fs89BDD+UjouLztkGDBvlx48at8VoBNY8OADXKnnvuGdOnT6/0uPHGGyuenzFjRowbN65iFnbDDTeMXr16xfLly2P27NkRETF16tQ44IADonXr1tGgQYPo0aNHRMQqW+zfpUuXLhX/zuVy0aJFi4pxojp16sSxxx4bN998c0RETJs2LV599dXVdhuA75e//e1vseGGG0adOnWid+/ecfjhh8fw4cPj8ccfj7333js23XTTaNCgQRx77LExd+7cWLRoUcVrS0tLK32+rPDCCy/EoYceGrfeemscfvjh31lDp06dolatWhU/t2zZsuIzap999ok2bdpEu3bt4thjj40JEyZU1DBr1qxYunRp7LrrrhWvrV27dvzwhz+Mf/3rX5XO8d91tmzZMiKi4hyDBw+OAQMGRM+ePePiiy+OWbNmfWfNQPUTAKhR6tevHx06dKj02HTTTSueX7BgQZx00kmVAsKMGTNi5syZ0b59+1i4cGH06tUrGjZsGBMmTIgpU6bEfffdFxERS5YsSVzP/7ayc7lcLF++vOLnAQMGxGOPPRb//ve/Y+zYsbHXXntFmzZtCnz3QJqs+IPFzJkzY/HixTF+/Pj47LPPYv/9948uXbrEPffcE1OnTo0//OEPEVH5M6hu3bqrvPG3ffv2sfXWW8fNN99caZZ/ddb0GdWgQYOYNm1a3H777dGyZcs4//zzY7vttku8otp/n2NFzSvOMXz48HjttdeiT58+MXHixOjYsWPFZy5QcwkApErXrl3j9ddfXykkdOjQIUpLS+ONN96IuXPnxsUXXxzdu3ePrbfeerU3AK9QWloay5YtK6iezp07R7du3eKGG26I2267rdJsLPD9tuIPFq1bt44NNvh2Ub2pU6fG8uXL44orrogf//jHseWWW8ZHH3201sfceOONY+LEifH222/HYYcdtlYhYE022GCD6NmzZ1x66aXx8ssvx7vvvhsTJ06M9u3bR2lpaTzzzDMV+y5dujSmTJkSHTt2THSOLbfcMn7961/Ho48+GgcffHCMHTt2nWoGqp4AQKqcffbZ8eyzz8agQYMq/vL2wAMPVNwE3Lp16ygtLY3f//738c4778SDDz4YF1xwwRqP2bZt21iwYEE88cQT8Z///KdSm35tDBgwIC6++OLI5/Pxs5/9rOD3BqRfhw4dYunSpRWfQbfeemtcf/31iY7RrFmzmDhxYrzxxhtx5JFHFvzdAn/729/i6quvjunTp8d7770Xt9xySyxfvjy22mqrqF+/fpxyyilx1llnxcMPPxyvv/56/OIXv4hFixbFCSecsFbHX7x4cQwaNCiefPLJeO+99+KZZ56JKVOmxDbbbFNQvcD6IwCQKl26dImnnnoq3nrrrejevXvssMMOcf7550erVq0iImKTTTaJcePGxd133x0dO3aMiy++OC6//PI1HnOXXXaJk08+OQ4//PDYZJNN4tJLL01U05FHHhkbbLBBHHnkkVGnTp2C3xuQftttt12MHj06Lrnkkth2221jwoQJMWrUqMTHadGiRUycODFeeeWVOProowvqUjZu3Djuvffe2GuvvWKbbbaJ66+/Pm6//fbo1KlTRERcfPHF8fOf/zyOPfbY6Nq1a7z99tvxyCOPRJMmTdbq+LVq1Yq5c+fGcccdF1tuuWUcdthh0bt37xgxYkTiWoH1K5fP5/PVXQSk2bvvvhvt27ePKVOmRNeuXau7HACANRIAoEBLly6NuXPnxplnnhmzZ8+uNEsLAFBTGQGCAj3zzDPRsmXLmDJlSuIZXwCA6qIDAAAAGaIDAAAAGSIAAABAhggAAACQIQIAAABkiAAAAAAZIgAAAECGCAAAAJAhAgAAAGSIAAAAABny/wC/G+VsBFKuRwAAAABJRU5ErkJggg==\n"},"metadata":{}}]},{"cell_type":"code","source":["print(classification_report(y_validation, predictions))"],"metadata":{"id":"ek591f4PcMvK","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708285471334,"user_tz":480,"elapsed":182,"user":{"displayName":"Ishan Dave","userId":"13762692394113223498"}},"outputId":"9a8b23af-e467-40dd-9c59-648379d90910"},"id":"ek591f4PcMvK","execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       1.00      0.50      0.67         2\n","           1       0.92      1.00      0.96        11\n","\n","    accuracy                           0.92        13\n","   macro avg       0.96      0.75      0.81        13\n","weighted avg       0.93      0.92      0.91        13\n","\n"]}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"f13b9f0c","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708285688218,"user_tz":480,"elapsed":448,"user":{"displayName":"Ishan Dave","userId":"13762692394113223498"}},"outputId":"f96d1957-2f90-4023-814f-e26a8c0f0d2d"},"outputs":[{"output_type":"stream","name":"stdout","text":["1/1 [==============================] - 0s 96ms/step\n","[[0.2622707 0.7377293]]\n"]}],"source":["\n","# Predicting code for an image\n","from tensorflow.keras.preprocessing import image\n","# Please replace the brackets below with the location of your image which need to predict\n","img_path = '/content/drive/Shareddrives/1:1_Ishan_Dave/Validation/Parkinsons/Copy of H_p000-0028.png'\n","img = image.load_img(img_path, target_size=IMG_SIZE)\n","img_array = image.img_to_array(img)\n","img_batch = np.expand_dims(img_array, axis=0)\n","img_preprocessed = preprocess_input(img_batch)\n","prediction = model.predict(img_preprocessed)\n","print(prediction)\n"],"id":"f13b9f0c"}],"metadata":{"colab":{"provenance":[{"file_id":"18DA_ivUutzHnf_GQBLRqVmd9D6RMGPUh","timestamp":1708007051487},{"file_id":"1GuyavNyhh1mmo01_NmOgBQyV9XkRIX3o","timestamp":1707988506483},{"file_id":"1cGS-XqlelZpoo-WOMa5AhmW3rmi5dI20","timestamp":1685523800067},{"file_id":"1kodshi7IaN_JqtlEsV5bn7WCBqzabNs1","timestamp":1685428949853},{"file_id":"1vtiqe4ChiKErzzE6lvfA-WUPwxH3oS4A","timestamp":1683914875497},{"file_id":"1b_idYmr0JOYT6X2dOsLzw25QB-la8O1t","timestamp":1672650124899},{"file_id":"17_UZwzcmAYzKCE279eaOMAklbbaUZN5H","timestamp":1670891677735},{"file_id":"1Zlv6RFpBOTiXg7rOnEaI_gXIY8H8PgaX","timestamp":1670887583215}],"gpuType":"T4"},"gpuClass":"standard","kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"},"accelerator":"GPU"},"nbformat":4,"nbformat_minor":5}