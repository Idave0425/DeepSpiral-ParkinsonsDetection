{"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":23916,"status":"ok","timestamp":1709051921035,"user":{"displayName":"Hardik Mavdiya","userId":"03802582472296481735"},"user_tz":-330},"id":"b76652cf","outputId":"40ac2f04-e9a5-4db7-b097-71bf87655f37"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["\n","from google.colab import drive\n","drive.mount('/content/drive')\n"],"id":"b76652cf"},{"cell_type":"code","execution_count":null,"metadata":{"id":"78ae10bb"},"outputs":[],"source":["\n","# Please replace the brackets below with the drive location of your folders which included subfolders for images\n","# Sample path: /content/drive/My Drive/ImageClassification\n","TRAINING_PATH = '/content/drive/Shareddrives/1:1_Ishan_Dave/Train'\n","VALIDATION_PATH = '/content/drive/Shareddrives/1:1_Ishan_Dave/Validation'"],"id":"78ae10bb"},{"cell_type":"code","execution_count":null,"metadata":{"id":"0bcb8666"},"outputs":[],"source":["def create_model(base_model, num_classes):\n","    import tensorflow as tf\n","    # Grab the last layer and add a few extra layers to it\n","    x=base_model.output\n","    x=GlobalAveragePooling2D()(x)\n","    # Dense layer 1\n","    x=tf.keras.layers.Dense(100,activation='relu', kernel_initializer=tf.keras.initializers.VarianceScaling(), use_bias=True)(x)\n","\n","    # Final layer with softmax activation\n","    preds=tf.keras.layers.Dense(num_classes,activation='softmax', kernel_initializer=tf.keras.initializers.VarianceScaling(), use_bias=False)(x)\n","\n","    # Create the final model\n","    model=Model(inputs=base_model.input,outputs=preds)\n","    return model\n"],"id":"0bcb8666"},{"cell_type":"code","execution_count":null,"metadata":{"id":"a7733499"},"outputs":[],"source":["def get_optimizer(optimizer_name, learning_rate):\n","    # Import keras optimizers\n","    from tensorflow.keras.optimizers import Adam, Adadelta, Adagrad, Adamax, Ftrl, Nadam, RMSprop, SGD\n","    print('Selected Optimizer', optimizer_name)\n","    switcher = {\n","        'Adadelta': Adadelta(learning_rate=learning_rate),\n","        'Adagrad': Adagrad(learning_rate=learning_rate),\n","        'Adam': Adam(learning_rate=learning_rate),\n","        'Adamax': Adamax(learning_rate=learning_rate),\n","        'FTRL': Ftrl(learning_rate=learning_rate),\n","        'NAdam': Nadam(learning_rate=learning_rate),\n","        'RMSprop': RMSprop(learning_rate=learning_rate),\n","        'Gradient Descent': SGD(learning_rate=learning_rate)\n","    }\n","    # If optimizer_name is empty, Adam will be return as default optimizer\n","    return switcher.get(optimizer_name, Adam(learning_rate=learning_rate))\n"],"id":"a7733499"},{"cell_type":"code","execution_count":null,"metadata":{"id":"e1978032","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708090057826,"user_tz":-330,"elapsed":47896,"user":{"displayName":"Hardik Mavdiya","userId":"03802582472296481735"}},"outputId":"e9fe2108-5d64-4caf-b1fe-2afe9da81039"},"outputs":[{"output_type":"stream","name":"stdout","text":["Found 58 images belonging to 2 classes.\n","Found 6 images belonging to 2 classes.\n","dict_keys(['Cats', 'Dogs'])\n","Downloading data from https://storage.googleapis.com/tensorflow/keras-applications/mobilenet_v2/mobilenet_v2_weights_tf_dim_ordering_tf_kernels_0.35_224_no_top.h5\n","2019640/2019640 [==============================] - 0s 0us/step\n","154\n","Selected Optimizer Adam\n","Epoch 1/20\n","2/2 [==============================] - 13s 6s/step - loss: 0.6961 - accuracy: 0.6379 - val_loss: 0.2563 - val_accuracy: 1.0000\n","Epoch 2/20\n","2/2 [==============================] - 1s 380ms/step - loss: 0.2372 - accuracy: 0.9828 - val_loss: 0.0962 - val_accuracy: 1.0000\n","Epoch 3/20\n","2/2 [==============================] - 1s 364ms/step - loss: 0.0880 - accuracy: 1.0000 - val_loss: 0.0340 - val_accuracy: 1.0000\n","Epoch 4/20\n","2/2 [==============================] - 1s 489ms/step - loss: 0.0390 - accuracy: 1.0000 - val_loss: 0.0144 - val_accuracy: 1.0000\n","Epoch 5/20\n","2/2 [==============================] - 1s 378ms/step - loss: 0.0183 - accuracy: 1.0000 - val_loss: 0.0083 - val_accuracy: 1.0000\n","Epoch 6/20\n","2/2 [==============================] - 1s 337ms/step - loss: 0.0094 - accuracy: 1.0000 - val_loss: 0.0069 - val_accuracy: 1.0000\n","Epoch 7/20\n","2/2 [==============================] - 1s 389ms/step - loss: 0.0048 - accuracy: 1.0000 - val_loss: 0.0067 - val_accuracy: 1.0000\n","Epoch 8/20\n","2/2 [==============================] - 1s 618ms/step - loss: 0.0030 - accuracy: 1.0000 - val_loss: 0.0068 - val_accuracy: 1.0000\n","Epoch 9/20\n","2/2 [==============================] - 1s 481ms/step - loss: 0.0023 - accuracy: 1.0000 - val_loss: 0.0068 - val_accuracy: 1.0000\n","Epoch 10/20\n","2/2 [==============================] - 1s 330ms/step - loss: 0.0017 - accuracy: 1.0000 - val_loss: 0.0065 - val_accuracy: 1.0000\n","Epoch 11/20\n","2/2 [==============================] - 1s 384ms/step - loss: 0.0014 - accuracy: 1.0000 - val_loss: 0.0059 - val_accuracy: 1.0000\n","Epoch 12/20\n","2/2 [==============================] - 1s 464ms/step - loss: 0.0010 - accuracy: 1.0000 - val_loss: 0.0052 - val_accuracy: 1.0000\n","Epoch 13/20\n","2/2 [==============================] - 1s 633ms/step - loss: 8.3174e-04 - accuracy: 1.0000 - val_loss: 0.0045 - val_accuracy: 1.0000\n","Epoch 14/20\n","2/2 [==============================] - 1s 463ms/step - loss: 6.6245e-04 - accuracy: 1.0000 - val_loss: 0.0038 - val_accuracy: 1.0000\n","Epoch 15/20\n","2/2 [==============================] - 1s 346ms/step - loss: 5.1315e-04 - accuracy: 1.0000 - val_loss: 0.0032 - val_accuracy: 1.0000\n","Epoch 16/20\n","2/2 [==============================] - 1s 363ms/step - loss: 4.1548e-04 - accuracy: 1.0000 - val_loss: 0.0028 - val_accuracy: 1.0000\n","Epoch 17/20\n","2/2 [==============================] - 1s 412ms/step - loss: 3.5509e-04 - accuracy: 1.0000 - val_loss: 0.0024 - val_accuracy: 1.0000\n","Epoch 18/20\n","2/2 [==============================] - 1s 446ms/step - loss: 3.1498e-04 - accuracy: 1.0000 - val_loss: 0.0021 - val_accuracy: 1.0000\n","Epoch 19/20\n","2/2 [==============================] - 1s 529ms/step - loss: 2.7288e-04 - accuracy: 1.0000 - val_loss: 0.0019 - val_accuracy: 1.0000\n","Epoch 20/20\n","2/2 [==============================] - 1s 502ms/step - loss: 2.4780e-04 - accuracy: 1.0000 - val_loss: 0.0017 - val_accuracy: 1.0000\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/keras/src/engine/training.py:3103: UserWarning: You are saving your model as an HDF5 file via `model.save()`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')`.\n","  saving_api.save_model(\n"]}],"source":["\n","# Import packages needed to create a image classification model\n","import matplotlib.pyplot as plt\n","import numpy as np\n","import os\n","import tensorflow as tf\n","\n","from keras.applications.mobilenet_v2 import preprocess_input\n","from keras.preprocessing.image import ImageDataGenerator\n","from keras.layers import Dense,GlobalAveragePooling2D\n","from keras.models import Model\n","from tensorflow.keras import regularizers\n","\n","from tensorflow.keras.preprocessing import image_dataset_from_directory\n","from keras.callbacks import EarlyStopping\n","from tensorflow import keras\n","\n","# Initialize hyper params\n","epochs = 20 #<-- increase for higher accuracy\n","base_learning_rate = 0.001 #decrease for different results; use excel sheet to note down results from each change to learning rate and epochs\n","optimizer = 'Adam'\n","BATCH_SIZE = 32\n","\n","IMG_SIZE = (224, 224)\n","\n","# Create the data generation pipeline for training and validation\n","train_datagen = ImageDataGenerator(preprocessing_function=preprocess_input)\n","validation_datagen = ImageDataGenerator(preprocessing_function=preprocess_input)\n","\n","train_generator = train_datagen.flow_from_directory(TRAINING_PATH,\n","                                                target_size=IMG_SIZE,\n","                                                color_mode='rgb',\n","                                                batch_size=BATCH_SIZE,\n","                                                class_mode='categorical',\n","                                                shuffle=True,\n","                                                )\n","validation_generator = validation_datagen.flow_from_directory(VALIDATION_PATH,\n","                                                target_size=IMG_SIZE,\n","                                                color_mode='rgb',\n","                                                batch_size=BATCH_SIZE,\n","                                                class_mode='categorical',\n","                                                shuffle=True,\n","                                                )\n","\n","print(validation_generator.class_indices.keys())\n","# Download the model, valid alpha values [0.25,0.35,0.5,0.75,1]\n","base_model = tf.keras.applications.mobilenet_v2.MobileNetV2(input_shape=(224, 224, 3), include_top=False, weights='imagenet', alpha=0.35)\n","for layer in base_model.layers:\n","    layer.trainable=False\n","\n","# Specify the number of classes\n","num_classes = 2\n","\n","# Create the base model\n","model = create_model(base_model,num_classes)\n","\n","print(len(base_model.layers))\n","\n","model.compile(optimizer = get_optimizer(optimizer_name=optimizer,learning_rate=base_learning_rate),loss='CategoricalCrossentropy',metrics=['accuracy'])\n","# Adam optimizer\n","# loss function will be categorical cross entropy\n","# evaluation metric will be accuracy\n","\n","early_stopping_monitor = EarlyStopping(\n","    monitor='val_loss',\n","    min_delta=0,\n","    patience=30,\n","    verbose=0,\n","    mode='auto',\n","    baseline=None,\n","    restore_best_weights=True\n",")\n","\n","step_size_train = train_generator.n//train_generator.batch_size\n","history_fine = model.fit(train_generator,\n","                        epochs=epochs,\n","                        validation_data = validation_generator,\n","                        verbose=1)\n","\n","model.save(\"/content/drive/Shareddrives/1:1_Ishan_Dave/Results/best_mobilenetv2_model_20_0.001.h5\")"],"id":"e1978032"},{"cell_type":"code","source":["def visualization():\n","    import pandas as pd\n","    df = pd.DataFrame(history_fine.history)\n","    #loss plots\n","    plt.figure(figsize=(8,8))\n","    plt.plot(df['loss'], color='red', label = \"Training_loss\")\n","    plt.plot(df['val_loss'], color='blue')\n","    plt.legend(['Training Loss','Validation loss'],loc = 'best' )\n","    plt.title('Line plot of Training and Validation loss')\n","    plt.ylim(0,1)\n","    plt.show()\n","\n","    #accuracy plots\n","    plt.figure(figsize=(8,8))\n","    plt.plot(df['accuracy'], color='red')\n","    plt.plot(df['val_accuracy'], color='blue')\n","    plt.legend(['Training acc','Validation acc'],loc = 'best' )\n","    plt.title('Line plot of Training and Validation Accuracies')\n","    plt.ylim(0,1)\n","    plt.show()\n","\n","visualization()"],"metadata":{"id":"VIV_LOPybQWa","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1708090079262,"user_tz":-330,"elapsed":1405,"user":{"displayName":"Hardik Mavdiya","userId":"03802582472296481735"}},"outputId":"d5093988-8bda-4598-a75d-7a4ef1fa9188"},"id":"VIV_LOPybQWa","execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x800 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 800x800 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"8756be45","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708090082953,"user_tz":-330,"elapsed":415,"user":{"displayName":"Hardik Mavdiya","userId":"03802582472296481735"}},"outputId":"22372f72-12a8-482c-f5a1-6462fd5888bf"},"outputs":[{"output_type":"stream","name":"stdout","text":["Training Accuracy:  [0.6379310488700867, 0.982758641242981, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]\n","Validation Accuracy:  [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]\n","Training Loss:  [0.6961493492126465, 0.23715268075466156, 0.08797147870063782, 0.039003148674964905, 0.01828993484377861, 0.009369872510433197, 0.004824510775506496, 0.0030389963649213314, 0.002300905529409647, 0.0017253620317205787, 0.0013592217583209276, 0.001006490783765912, 0.0008317437022924423, 0.0006624517845921218, 0.0005131544312462211, 0.00041547894943505526, 0.0003550928959157318, 0.00031498188036493957, 0.0002728828403633088, 0.0002477994130458683]\n","Validation Loss:  [0.25632551312446594, 0.09619120508432388, 0.03399373218417168, 0.014388475567102432, 0.008344292640686035, 0.006920164916664362, 0.006658853963017464, 0.006844047922641039, 0.0068321856670081615, 0.006507068872451782, 0.00589043227955699, 0.005238667130470276, 0.004474589601159096, 0.0037945983931422234, 0.0032434465829283, 0.0027936564292758703, 0.0024175376165658236, 0.0021091147791594267, 0.0018689882708713412, 0.0016778710996732116]\n","best model accuracy:  1.0\n"]}],"source":["\n","# Import numpy for calculating best model accuracy\n","import numpy as np\n","# Populating matrics -> accuracy & loss\n","acc = history_fine.history['accuracy']\n","val_acc = history_fine.history['val_accuracy']\n","\n","loss = history_fine.history['loss']\n","val_loss = history_fine.history['val_loss']\n","\n","print('Training Accuracy: ', acc)\n","print('Validation Accuracy: ', val_acc)\n","print('Training Loss: ', loss)\n","print('Validation Loss: ', val_loss)\n","best_model_accuracy = history_fine.history['val_accuracy'][np.argmin(history_fine.history['val_loss'])]\n","print('best model accuracy: ', best_model_accuracy)\n"],"id":"8756be45"},{"cell_type":"code","execution_count":null,"metadata":{"id":"4c863fdc"},"outputs":[],"source":["def seperate_labels(generator):\n","    x_validation = []\n","    y_validation = []\n","    num_seen = 0\n","\n","    for x, labels in generator:\n","        x_validation.append(x)\n","        y_validation.append([argmax(label) for label in labels])\n","        num_seen += len(x)\n","        if num_seen == generator.n: break\n","\n","    x_validation = np.concatenate(x_validation)\n","    y_validation = np.concatenate(y_validation)\n","    return x_validation, y_validation\n"],"id":"4c863fdc"},{"cell_type":"code","execution_count":null,"metadata":{"id":"a650757c","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708090089101,"user_tz":-330,"elapsed":1827,"user":{"displayName":"Hardik Mavdiya","userId":"03802582472296481735"}},"outputId":"e8f119f5-d24f-4101-fccb-400ec2680c15"},"outputs":[{"output_type":"stream","name":"stdout","text":["1/1 [==============================] - 1s 747ms/step\n"]}],"source":["\n","# Calculate and display the confusion matrix\n","import matplotlib.pyplot as plt\n","from numpy.core.fromnumeric import argmax\n","from sklearn.metrics import ConfusionMatrixDisplay\n","\n","x_validation, y_validation = seperate_labels(validation_generator)\n","y_pred = model.predict(x_validation, batch_size=BATCH_SIZE)\n","predictions = np.apply_along_axis(argmax, 1, y_pred)\n","display_labels = validation_generator.class_indices.keys()\n","\n","# ConfusionMatrixDisplay.from_predictions(y_validation, predictions, display_labels=display_labels, cmap=\"binary\")\n","# plt.show()\n"],"id":"a650757c"},{"cell_type":"code","source":["import seaborn as sns\n","from sklearn.metrics import confusion_matrix, classification_report\n","plt.figure(figsize = (10,10))\n","sns.heatmap(confusion_matrix(y_validation, predictions), annot = True, fmt = 'g', cmap = \"Blues\",xticklabels=display_labels, yticklabels=display_labels)\n","plt.title(\"Confusion Matrix\")\n","plt.show()"],"metadata":{"id":"0hlIInn6bhOE","colab":{"base_uri":"https://localhost:8080/","height":853},"executionInfo":{"status":"ok","timestamp":1708090091133,"user_tz":-330,"elapsed":982,"user":{"displayName":"Hardik Mavdiya","userId":"03802582472296481735"}},"outputId":"6cdc838e-921e-4bfd-dbf8-b61fbbec5d36"},"id":"0hlIInn6bhOE","execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x1000 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["print(classification_report(y_validation, predictions))"],"metadata":{"id":"ek591f4PcMvK","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1708090093563,"user_tz":-330,"elapsed":404,"user":{"displayName":"Hardik Mavdiya","userId":"03802582472296481735"}},"outputId":"2fab50a4-69f3-4c2d-97fe-5b2d791f86b7"},"id":"ek591f4PcMvK","execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       1.00      1.00      1.00         3\n","           1       1.00      1.00      1.00         3\n","\n","    accuracy                           1.00         6\n","   macro avg       1.00      1.00      1.00         6\n","weighted avg       1.00      1.00      1.00         6\n","\n"]}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"f13b9f0c","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1707752782422,"user_tz":-330,"elapsed":2623,"user":{"displayName":"Veena Madhuri","userId":"05057961004648111414"}},"outputId":"e744fe7c-517c-4230-dca8-24e213b23804"},"outputs":[{"output_type":"stream","name":"stdout","text":["1/1 [==============================] - 1s 676ms/step\n","[[0.14497438 0.8550256 ]]\n"]}],"source":["\n","# Predicting code for an image\n","from tensorflow.keras.preprocessing import image\n","# Please replace the brackets below with the location of your image which need to predict\n","img_path = '/content/drive/Shareddrives/1:1_Ishan_Dave/Test/Parkinsons/Copy of H_P000-0004.png'\n","img = image.load_img(img_path, target_size=IMG_SIZE)\n","img_array = image.img_to_array(img)\n","img_batch = np.expand_dims(img_array, axis=0)\n","img_preprocessed = preprocess_input(img_batch)\n","prediction = model.predict(img_preprocessed)\n","print(prediction)\n"],"id":"f13b9f0c"}],"metadata":{"colab":{"provenance":[{"file_id":"1zgcCk73QY_L1MmofD7gAfD_GYnQfOkCc","timestamp":1707608665266},{"file_id":"1TQ2Jr1A7ezGtpR6EjZsq-zpFL11WXeqt","timestamp":1707608610128},{"file_id":"1cGS-XqlelZpoo-WOMa5AhmW3rmi5dI20","timestamp":1685443197089},{"file_id":"1kodshi7IaN_JqtlEsV5bn7WCBqzabNs1","timestamp":1685428949853},{"file_id":"1vtiqe4ChiKErzzE6lvfA-WUPwxH3oS4A","timestamp":1683914875497},{"file_id":"1b_idYmr0JOYT6X2dOsLzw25QB-la8O1t","timestamp":1672650124899},{"file_id":"17_UZwzcmAYzKCE279eaOMAklbbaUZN5H","timestamp":1670891677735},{"file_id":"1Zlv6RFpBOTiXg7rOnEaI_gXIY8H8PgaX","timestamp":1670887583215}],"gpuType":"T4"},"gpuClass":"standard","kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"},"accelerator":"GPU"},"nbformat":4,"nbformat_minor":5}